jobs:
  include:
#    - name: cu8
#      env:
#        - CUDA=8.0.61-1
#        - CUDA_SHORT=8.0
#        - UBUNTU_VERSION=ubuntu1604
#        - BUILD_TAG=-cuda8.0
#      dist: xenial
#      compiler: gcc
#      language: python
#    - name: cu9
#      env:
#        - CUDA=9.2.148-1
#        - CUDA_SHORT=9.2
#        - UBUNTU_VERSION=ubuntu1604
#        - BUILD_TAG=-cuda9.2
#      dist: xenial
#      language: python
#    - name: cu10
#      env:
#        - CUDA=10.1.105-1
#        - CUDA_SHORT=10.1
#        - UBUNTU_VERSION=ubuntu1804
#        - BUILD_TAG=-cuda10.1
#      dist: bionic
#      language: python
    - name: win
      os: windows
      language: cpp
      env:
        - MSBUILD_PATH="c:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin"
before_script:
  - mkdir build-test
  - cd build-test
#  - cmake -DBUILD_TESTS=ON -DUSE_CUDA=OFF -DUSE_EIGEN=ON ..
  - export PATH=$MSBUILD_PATH:$PATH
#  - cmake -DCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=TRUE -DBUILD_SHARED_LIBS=TRUE -DUSE_CUDA=OFF -DUSE_EIGEN=ON -DBUILD_TESTS=ON -G "Visual Studio 14 2015 Win64" ..
script:
  - dir
#  - cmake --build . --target runtest
before_deploy:
#  - INSTALLER=cuda-repo-${UBUNTU_VERSION}_${CUDA}_amd64.deb
#  - wget http://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/${INSTALLER}
#  - sudo dpkg -i ${INSTALLER}
#  - wget https://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/7fa2af80.pub
#  - sudo apt-key add 7fa2af80.pub
#  - sudo apt update -qq
#  - sudo apt install -y cuda-core-${CUDA_SHORT/./-} cuda-cudart-dev-${CUDA_SHORT/./-} cuda-cufft-dev-${CUDA_SHORT/./-} cuda-cusparse-dev-${CUDA_SHORT/./-}
#  - sudo apt clean
#  - CUDA_HOME=/usr/local/cuda-${CUDA_SHORT}
#  - LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
#  - PATH=${CUDA_HOME}/bin:${PATH}
  - cd ..
  - mkdir build
  - cd build
  - cmake -DCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=TRUE -DBUILD_SHARED_LIBS=TRUE -DUSE_CUDA=OFF -DUSE_EIGEN=ON -DBUILD_TESTS=ON -G "Visual Studio 14 2015 Win64" ..
  - cmake --build .
  - cd ../python
  - choco install python --version=3.6.3
  - export PATH=C:\Python36\bin:$PATH
  - python setup.py bdist_wheel
deploy:
  provider: releases
  api_key: ${GITHUB_API_TOKEN}
  file: "dist/*"
  file_glob: true
  skip_cleanup: true
